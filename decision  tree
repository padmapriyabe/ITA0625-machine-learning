from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier, export_text

# Load the Iris dataset
iris = load_iris()
X, y = iris.data, iris.target

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train the Decision Tree classifier (ID3-like algorithm)
id3_classifier = DecisionTreeClassifier(criterion='entropy', random_state=42)
id3_classifier.fit(X_train, y_train)

# Display the decision tree rules
tree_rules = export_text(id3_classifier, feature_names=iris.feature_names)
print("Decision Tree Rules:")
print(tree_rules)

# Make predictions on a new sample (e.g., the first sample from the test set)
new_sample = X_test[0].reshape(1, -1)
predicted_class = id3_classifier.predict(new_sample)
predicted_class_name = iris.target_names[predicted_class][0]
print("\nPredicted class for the new sample:", predicted_class_name)

